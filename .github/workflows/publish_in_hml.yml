name: ðŸš€ Deploy to Docker Hub and Remote Server

on:
  push:
    branches:
      - homologation

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      TAG: ${{ github.sha }}
    steps:
      - name: ðŸ“¥ Checkout do CÃ³digo
        uses: actions/checkout@v3

      - name: ðŸ”‘ Login no Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: ðŸ”¨ Build da Imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }} .

      - name: ðŸš€ Push da Imagem para o Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}

  deploy:
    name: ðŸš€ Deploy no Servidor Remoto
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: ðŸ“¡ Conectar no Servidor e Fazer Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "ðŸ”‘ Login no Docker Hub"
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            echo "ðŸ“¦ Fazendo pull da nova imagem"
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}

            echo "ðŸ›‘ Parando e removendo container antigo"
            docker stop ${{ secrets.CONTAINER_NAME }} || true
            docker rm ${{ secrets.CONTAINER_NAME }} || true

            echo "ðŸš€ Rodando novo container com variÃ¡veis de ambiente"
            docker run -d --restart always --name ${{ secrets.CONTAINER_NAME }} \
              -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              -e AZURE_STORAGE_ACCOUNT_NAME="${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
              -e AZURE_STORAGE_SAS_TOKEN="${{ secrets.AZURE_STORAGE_SAS_TOKEN }}" \
              -e CONTAINER_NAME="${{ secrets.CONTAINER_NAME }}" \
              -e OTEL_EXPORTER_OTLP_ENDPOINT="${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}" \
              -e OTEL_SERVICE_NAME="${{ secrets.OTEL_SERVICE_NAME }}" \
              -e OTEL_LOG_LEVEL="${{ secrets.OTEL_LOG_LEVEL }}" \
              -p 8998:8000 ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}

            echo "âœ… Deploy concluÃ­do!"
